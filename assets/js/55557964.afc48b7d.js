"use strict";(self.webpackChunkch_blog=self.webpackChunkch_blog||[]).push([[753],{8453:(n,e,t)=>{t.d(e,{R:()=>x,x:()=>o});var s=t(6540);const r={},i=s.createContext(r);function x(n){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:x(n.components),s.createElement(i.Provider,{value:e},n.children)}},8612:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>o,default:()=>c,frontMatter:()=>x,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"sacda_dev/Modbus\u6e29\u5ea6\u91c7\u96c6\u9879\u76ee\u5b9e\u6218","title":"Modbus\u6e29\u5ea6\u91c7\u96c6\u9879\u76ee\u5b9e\u6218","description":"RS-485\u4e32\u53e3\u901a\u8baf\u57fa\u7840","source":"@site/docs/sacda_dev/Modbus\u6e29\u5ea6\u91c7\u96c6\u9879\u76ee\u5b9e\u6218.md","sourceDirName":"sacda_dev","slug":"/sacda_dev/Modbus\u6e29\u5ea6\u91c7\u96c6\u9879\u76ee\u5b9e\u6218","permalink":"/docs/sacda_dev/Modbus\u6e29\u5ea6\u91c7\u96c6\u9879\u76ee\u5b9e\u6218","draft":false,"unlisted":false,"editUrl":"https://github.com/haochan1996/haochan1996.github.io/tree/main/docs/sacda_dev/Modbus\u6e29\u5ea6\u91c7\u96c6\u9879\u76ee\u5b9e\u6218.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Rust\u7f16\u7a0b\uff1a\u5165\u95e8\u3001\u5b9e\u6218\u4e0e\u8fdb\u9636\uff08\u6731\u6625\u96f7\uff09","permalink":"/docs/category/rust\u7f16\u7a0b\u5165\u95e8\u5b9e\u6218\u4e0e\u8fdb\u9636\u6731\u6625\u96f7"}}');var r=t(4848),i=t(8453);const x={sidebar_position:1},o=void 0,a={},l=[{value:"RS-485\u4e32\u53e3\u901a\u8baf\u57fa\u7840",id:"rs-485\u4e32\u53e3\u901a\u8baf\u57fa\u7840",level:2},{value:"\u4e32\u53e3\u901a\u8baf\u786c\u4ef6\u63a5\u7ebf",id:"\u4e32\u53e3\u901a\u8baf\u786c\u4ef6\u63a5\u7ebf",level:3},{value:"\u4e32\u53e3\u901a\u8baf\u6570\u636e\u6d41\u548c\u683c\u5f0f",id:"\u4e32\u53e3\u901a\u8baf\u6570\u636e\u6d41\u548c\u683c\u5f0f",level:3},{value:"\u4e32\u884c\u901a\u4fe1\u683c\u5f0f\uff08\u5355\u5b57\u8282\u534f\u8bae\uff09",id:"\u4e32\u884c\u901a\u4fe1\u683c\u5f0f\u5355\u5b57\u8282\u534f\u8bae",level:3},{value:"Modbus\u901a\u8baf\u534f\u8bae",id:"modbus\u901a\u8baf\u534f\u8bae",level:2},{value:"\u5173\u4e8e\u901a\u8baf\u534f\u8bae",id:"\u5173\u4e8e\u901a\u8baf\u534f\u8bae",level:3},{value:"Modbus\u4e0e\u4e32\u53e3\u7684\u5173\u7cfb",id:"modbus\u4e0e\u4e32\u53e3\u7684\u5173\u7cfb",level:4},{value:"Modbus\u4e0e\u4e32\u884c\u901a\u4fe1\u5173\u7cfb",id:"modbus\u4e0e\u4e32\u884c\u901a\u4fe1\u5173\u7cfb",level:4},{value:"Modbus\u7f51\u7edc\u4f20\u8f93\u7684\u4e09\u79cd\u6a21\u5f0f",id:"modbus\u7f51\u7edc\u4f20\u8f93\u7684\u4e09\u79cd\u6a21\u5f0f",level:4},{value:"Modbus RTU\u6d88\u606f\u5e27\u683c\u5f0f",id:"modbus-rtu\u6d88\u606f\u5e27\u683c\u5f0f",level:3},{value:"Modbus\u6570\u636e\u5b58\u50a8\u533a\u548c\u529f\u80fd\u7801",id:"modbus\u6570\u636e\u5b58\u50a8\u533a\u548c\u529f\u80fd\u7801",level:3},{value:"\u7ebf\u5708\u548c\u5bc4\u5b58\u5668",id:"\u7ebf\u5708\u548c\u5bc4\u5b58\u5668",level:4},{value:"\u529f\u80fd\u7801",id:"\u529f\u80fd\u7801",level:4},{value:"Modbus\u901a\u8baf\u6a21\u5f0f",id:"modbus\u901a\u8baf\u6a21\u5f0f",level:3},{value:"\u4e3b-\u4ece\u901a\u8baf",id:"\u4e3b-\u4ece\u901a\u8baf",level:4},{value:"\u4e3b\u8bbe\u5907\u8bf7\u6c42\u6a21\u5f0f",id:"\u4e3b\u8bbe\u5907\u8bf7\u6c42\u6a21\u5f0f",level:4},{value:"Modbus\u62a5\u6587\u89e3\u6790\u5b9e\u6218",id:"modbus\u62a5\u6587\u89e3\u6790\u5b9e\u6218",level:3},{value:"\u57fa\u4e8eModbus\u534f\u8bae\u5b9e\u73b0\u4e0a\u4f4d\u673a\u7a0b\u5e8f\u5f00\u53d1",id:"\u57fa\u4e8emodbus\u534f\u8bae\u5b9e\u73b0\u4e0a\u4f4d\u673a\u7a0b\u5e8f\u5f00\u53d1",level:2},{value:"\u9879\u76eeUI\u8bbe\u8ba1\u300a\u6ce8\u610f\u95ee\u9898\u300b",id:"\u9879\u76eeui\u8bbe\u8ba1\u6ce8\u610f\u95ee\u9898",level:3},{value:"\u65b0\u5efa\u9879\u76ee",id:"\u65b0\u5efa\u9879\u76ee",level:3},{value:"\u6e29\u6e7f\u5ea6\u663e\u793a\u95ee\u9898",id:"\u6e29\u6e7f\u5ea6\u663e\u793a\u95ee\u9898",level:3},{value:"\u80cc\u666f\u989c\u8272\u7684\u6539\u53d8",id:"\u80cc\u666f\u989c\u8272\u7684\u6539\u53d8",level:3},{value:"\u6e29\u6e7f\u5ea6\u503c\u7684\u663e\u793a",id:"\u6e29\u6e7f\u5ea6\u503c\u7684\u663e\u793a",level:3},{value:"\u8fde\u63a5\u53c2\u6570\u754c\u9762",id:"\u8fde\u63a5\u53c2\u6570\u754c\u9762",level:3},{value:"\u8bf7\u6c42\u548c\u5e94\u7b54\u62a5\u6587\u7684\u5c01\u88c5\u548c\u89e3\u6790",id:"\u8bf7\u6c42\u548c\u5e94\u7b54\u62a5\u6587\u7684\u5c01\u88c5\u548c\u89e3\u6790",level:3},{value:"Modbus\u62a5\u6587\u901a\u8baf\u89e3\u6790",id:"modbus\u62a5\u6587\u901a\u8baf\u89e3\u6790",level:4},{value:"Modbus RTU\u901a\u8baf\u7c7b",id:"modbus-rtu\u901a\u8baf\u7c7b",level:4},{value:"\u9879\u76ee\u4e2d\u4f7f\u7528\u901a\u8baf\u7c7b",id:"\u9879\u76ee\u4e2d\u4f7f\u7528\u901a\u8baf\u7c7b",level:3},{value:"\u6700\u7ec8\u5b9e\u73b0\u7684\u6548\u679c",id:"\u6700\u7ec8\u5b9e\u73b0\u7684\u6548\u679c",level:3}];function d(n){const e={code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{id:"rs-485\u4e32\u53e3\u901a\u8baf\u57fa\u7840",children:"RS-485\u4e32\u53e3\u901a\u8baf\u57fa\u7840"}),"\n",(0,r.jsx)(e.h3,{id:"\u4e32\u53e3\u901a\u8baf\u786c\u4ef6\u63a5\u7ebf",children:"\u4e32\u53e3\u901a\u8baf\u786c\u4ef6\u63a5\u7ebf"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://blog-1301697820.cos.ap-guangzhou.myqcloud.com/blog/image-20250520144300919.png",alt:"image-20250520144300919"})}),"\n",(0,r.jsx)(e.h3,{id:"\u4e32\u53e3\u901a\u8baf\u6570\u636e\u6d41\u548c\u683c\u5f0f",children:"\u4e32\u53e3\u901a\u8baf\u6570\u636e\u6d41\u548c\u683c\u5f0f"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://blog-1301697820.cos.ap-guangzhou.myqcloud.com/blog/image-20250520145655518.png",alt:"image-20250520145655518"})}),"\n",(0,r.jsx)(e.h3,{id:"\u4e32\u884c\u901a\u4fe1\u683c\u5f0f\u5355\u5b57\u8282\u534f\u8bae",children:"\u4e32\u884c\u901a\u4fe1\u683c\u5f0f\uff08\u5355\u5b57\u8282\u534f\u8bae\uff09"}),"\n",(0,r.jsx)(e.p,{children:"\u5e38\u7528\uff1a\uff089600\uff0cN\uff0c8\uff0c1\uff09\u6ce2\u7279\u73879600b/s\uff0c\u65e0\u5947\u5076\u6821\u9a8c\u4f4d\uff0c8\u4f4d\u6570\u636e\u4f4d\uff0c1\u4f4d\u505c\u6b62\u4f4d"}),"\n",(0,r.jsx)(e.h2,{id:"modbus\u901a\u8baf\u534f\u8bae",children:"Modbus\u901a\u8baf\u534f\u8bae"}),"\n",(0,r.jsx)(e.h3,{id:"\u5173\u4e8e\u901a\u8baf\u534f\u8bae",children:"\u5173\u4e8e\u901a\u8baf\u534f\u8bae"}),"\n",(0,r.jsx)(e.p,{children:"\u4e0d\u540c\u8bbe\u5907\u4e4b\u95f4\u4ea4\u6362\u6570\u636e\u8981\u9075\u5faa\u7684\u89c4\u8303\u3002\u5c31\u597d\u6bd4\u4eba\u4e0e\u4eba\u4e4b\u95f4\u4ea4\u6d41\u7528\u7684\u8bed\u8a00\uff0c\u5fc5\u987b\u8981\u6709\u8bed\u6cd5\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4e32\u884c\u901a\u4fe1\u9075\u5b88Modbus\u534f\u8bae\u4e32\u53e3\u786c\u4ef6(RS-232\u3001RS-485\u3001RS-422)\u90fd\u662f\u6309\u7167Modbus\u534f\u8bae\u3002\u4f46\u662fModbus\u4e5f\u53ef\u4ee5\u7528\u4e8e\u4ee5\u592a\u7f51TCP/IP\u901a\u4fe1\u3002"}),"\n",(0,r.jsx)(e.h4,{id:"modbus\u4e0e\u4e32\u53e3\u7684\u5173\u7cfb",children:"Modbus\u4e0e\u4e32\u53e3\u7684\u5173\u7cfb"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"\u4e32\u53e3\u901a\u8baf\u7269\u7406\u63a5\u53e3\uff1aRS232\u3001RS-485\u3001RS-422\u63a5\u53e3\uff0c\u662f\u786c\u4ef6"}),"\n",(0,r.jsx)(e.li,{children:"Modbus\u662f\u56fd\u9645\u6807\u51c6\u7684\u4e32\u53e3\u901a\u8baf\u534f\u8bae\uff0c\u662f\u8f6f\u4ef6"}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"modbus\u4e0e\u4e32\u884c\u901a\u4fe1\u5173\u7cfb",children:"Modbus\u4e0e\u4e32\u884c\u901a\u4fe1\u5173\u7cfb"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"\u524d\u9762\u6240\u8bb2\u4e32\u884c\u901a\u4fe1\u683c\u5f0f:\u8868\u793a\u4e00\u4e2a\u5b57\u8282\u7684\u4f20\u8f93\u534f\u8bae(9600\uff0cN\uff0c8,1)\uff0c\u5b9e\u9645\u5e94\u7528\u4e2d\u6570\u636e\u4f20\u9001\u90fd\u662f\u591a\u4e2a\u4e32\u884c\u5b57\u8282\u7ec4\u5408\u5230\u4e00\u8d77\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u95ee\u9898:\u5982\u4f55\u8bc6\u522b\u591a\u4e2a\u5b57\u8282?\u4e5f\u5c31\u662f\u5bf9\u591a\u4e2a\u4e32\u884c\u5b57\u8282\u4f20\u8f93\u548c\u89e3\u6790\u7684\u6807\u51c6\u600e\u4e48\u89c4\u5b9a?Modbus\u5c31\u662f\u8fd9\u4e2a\u4f5c\u7528\u3002"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Modbus:\u5c31\u662f\u5982\u4f55\u7528\u4e32\u53e3\u4e00\u6b21\u8fde\u7eed\u4f20\u8f93\u591a\u4e2a\u6709\u5e8f\u5b57\u8282\u7684\u534f\u8bae\u3002\u5b83\u89c4\u5b9a\u4e86\u4e00\u6b21\u53d1\u9001\u591a\u5c11\u7ed9\u5b57\u8282\uff0c\u4ee5\u53ca\u5b57\u8282\u987a\u5e8f\u5982\u4f55\u6392\u5217\u3002"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"modbus\u7f51\u7edc\u4f20\u8f93\u7684\u4e09\u79cd\u6a21\u5f0f",children:"Modbus\u7f51\u7edc\u4f20\u8f93\u7684\u4e09\u79cd\u6a21\u5f0f"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"ASCII\u6a21\u5f0f\uff1aG\u6807\u51c6\u4fe1\u606f\u4ea4\u6362\u7801(0-9\uff0ca-z\uff0cA-Z)\uff0c\u6570\u636e\u4e2d\u7684\u6bcf8\u4e2a\u4f4d\u7684\u5b57\u8282\u90fd\u7528ASCI\u7801\u53d1\u9001\u3002"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"RTU\u6a21\u5f0f: (Remote TerminalUnit\uff0cRTU)\u8fdc\u7a0b\u7ec8\u7aef\u5355\u5143\u6a21\u5f0f\u901a\u4fe1\uff0c\u9488\u5bf9\u901a\u4fe1\u8ddd\u79bb\u8f83\u957f\u548c\u5de5\u4e1a\u73b0\u573a\u73af\u5883\u6076\u52a3\u800c\u8bbe\u8ba1\u7684\u901a\u4fe1\u7ed3\u6784\u3002\u7279\u70b9:\u6d88\u606f\u4e2d\u6bcf\u4e2a8 bit\u7684\u5b57\u8282\u90fd\u5305\u542b\u91cf4bit\u7684\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u3002"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"TCP\u6a21\u5f0f\uff1a\u901a\u8fc7\u4ee5\u592a\u7f51\u548c\u4e92\u8054\u7f51\u8fde\u63a5\u4f20\u8f93\u6570\u636e\u4f7f\u7528\u7684\u662fTCP/P\u534f\u8bae\uff0c\u79f0\u4e3aTCP\u6a21\u5f0f\uff0c\u786c\u4ef6\u63a5\u53e3\u5c31\u662f\u4ee5\u592a\u7f51(Fthernet)\u63a5\u53e3\u3002"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"modbus-rtu\u6d88\u606f\u5e27\u683c\u5f0f",children:"Modbus RTU\u6d88\u606f\u5e27\u683c\u5f0f"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://blog-1301697820.cos.ap-guangzhou.myqcloud.com/blog/image-20250520151128701.png",alt:"image-20250520151128701"})}),"\n",(0,r.jsx)(e.h3,{id:"modbus\u6570\u636e\u5b58\u50a8\u533a\u548c\u529f\u80fd\u7801",children:"Modbus\u6570\u636e\u5b58\u50a8\u533a\u548c\u529f\u80fd\u7801"}),"\n",(0,r.jsx)(e.h4,{id:"\u7ebf\u5708\u548c\u5bc4\u5b58\u5668",children:"\u7ebf\u5708\u548c\u5bc4\u5b58\u5668"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://blog-1301697820.cos.ap-guangzhou.myqcloud.com/blog/image-20250520151606597.png",alt:"image-20250520151606597"})}),"\n",(0,r.jsx)(e.h4,{id:"\u529f\u80fd\u7801",children:"\u529f\u80fd\u7801"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://blog-1301697820.cos.ap-guangzhou.myqcloud.com/blog/image-20250520152343524.png",alt:"image-20250520152343524"})}),"\n",(0,r.jsx)(e.h3,{id:"modbus\u901a\u8baf\u6a21\u5f0f",children:"Modbus\u901a\u8baf\u6a21\u5f0f"}),"\n",(0,r.jsx)(e.h4,{id:"\u4e3b-\u4ece\u901a\u8baf",children:"\u4e3b-\u4ece\u901a\u8baf"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://blog-1301697820.cos.ap-guangzhou.myqcloud.com/blog/image-20250520152854738.png",alt:"image-20250520152854738"})}),"\n",(0,r.jsx)(e.h4,{id:"\u4e3b\u8bbe\u5907\u8bf7\u6c42\u6a21\u5f0f",children:"\u4e3b\u8bbe\u5907\u8bf7\u6c42\u6a21\u5f0f"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"\u5355\u64ad\u6a21\u5f0f"}),":\u4e3b\u8bbe\u5907\u4ec5\u4ec5\u5bfb\u5740\u5355\u4e2a\u4ece\u8bbe\u5907\u3002\u4ece\u8bbe\u5907\u63a5\u6536\u5e76\u5904\u7406\u5b8c\u8bf7\u6c42\u540e\uff0c\u5411\u4e3b\u8bbe\u5907\u8fd4\u56de\u4e00\u4e2a\u54cd\u5e94\u62a5\u6587\uff0c\u5373\u5e94\u7b54\u3002\n\u6b64\u6a21\u5f0f\u4e0b\uff0c\u8981\u6709\u4e24\u4e2aModbus\u62a5\u6587:\u4e00\u4e2a\u662f\u4e3b\u8bbe\u5907\u8bf7\u6c42\u62a5\u6587\uff0c\u4e00\u4e2a\u662f\u4ece\u8bbe\u5907\u54cd\u5e94\u62a5\u6587\u3002\u4ece\u8bbe\u5907\u5730\u5740\u5fc5\u987b\u552f\u4e00(1~247)\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://blog-1301697820.cos.ap-guangzhou.myqcloud.com/blog/image-20250520153029270.png",alt:"image-20250520153029270"})}),"\n",(0,r.jsxs)(e.ol,{start:"2",children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"\u5e7f\u64ad\u6a21\u5f0f"}),":\u4e3b\u8bbe\u5907\u53ef\u4ee5\u5411\u6240\u6709\u7684\u4ece\u8bbe\u5907\u53d1\u9001\u8bf7\u6c42\u6307\u4ee4\u3002\u4ece\u8bbe\u5907\u63a5\u6536\u5230\u5e7f\u64ad\u6307\u4ee4\u540e\uff0c\u4ec5\u4ec5\u505a\u6307\u4ee4\u5904\u7406\u800c\u4e0d\u5e94\u7b54\u3002\u6b64\u6a21\u5f0f\u4e0b\uff0c\u8bf7\u6c42\u6307\u4ee4\u5fc5\u987b\u662f\u201c\u5199\u201d\u6307\u4ee4\u3002\u6839\u636e\u534f\u8bae\u8981\u6c42\uff0c\n\u6240\u6709\u4ece\u8bbe\u5907\u5fc5\u987b\u63a5\u6536\u5e7f\u64ad\u6a21\u5f0f\u4e0b\u7684\u5199\u6307\u4ee4\uff0c\u5730\u57400\u88ab\u4fdd\u7559\u7528\u6765\u8bc6\u522b\u5e7f\u64ad\u901a\u4fe1\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"modbus\u62a5\u6587\u89e3\u6790\u5b9e\u6218",children:"Modbus\u62a5\u6587\u89e3\u6790\u5b9e\u6218"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://blog-1301697820.cos.ap-guangzhou.myqcloud.com/blog/image-20250520153330272.png",alt:"image-20250520153330272"})}),"\n",(0,r.jsx)(e.h2,{id:"\u57fa\u4e8emodbus\u534f\u8bae\u5b9e\u73b0\u4e0a\u4f4d\u673a\u7a0b\u5e8f\u5f00\u53d1",children:"\u57fa\u4e8eModbus\u534f\u8bae\u5b9e\u73b0\u4e0a\u4f4d\u673a\u7a0b\u5e8f\u5f00\u53d1"}),"\n",(0,r.jsx)(e.h3,{id:"\u9879\u76eeui\u8bbe\u8ba1\u6ce8\u610f\u95ee\u9898",children:"\u9879\u76eeUI\u8bbe\u8ba1\u300a\u6ce8\u610f\u95ee\u9898\u300b"}),"\n",(0,r.jsx)(e.p,{children:"\u7f29\u653e\u4e0e\u5e03\u5c40\u7684\u754c\u9762\u5fc5\u987b\u662f100%\uff0c\u663e\u793a\u5668\u5206\u8fa8\u7387\u4f7f\u7528\u63a8\u8350\u7684\u5206\u8fa8\u7387\u3002"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://blog-1301697820.cos.ap-guangzhou.myqcloud.com/blog/image-20250520164721286.png",alt:"image-20250520164721286"})}),"\n",(0,r.jsx)(e.h3,{id:"\u65b0\u5efa\u9879\u76ee",children:"\u65b0\u5efa\u9879\u76ee"}),"\n",(0,r.jsx)(e.p,{children:"\u521b\u5efawinforms\u7c7b\u5e93\uff0c\u9879\u76ee\u540dscada.MyControls\uff0c \u9009\u62e9\u89e3\u51b3\u65b9\u6848\u548c\u9879\u76ee\u4e0d\u5728\u540c\u4e00\u76ee\u5f55\uff0c\u89e3\u51b3\u65b9\u6848\u540d\u79f0scada.THProject\uff0c\u8fd0\u884c\u73af\u5883.net8"}),"\n",(0,r.jsx)(e.p,{children:"\u5220\u9664scada.MyControls\u9879\u76ee\u4e0b\u9ed8\u8ba4Class.cs\uff0c\u6dfb\u52a0\u9879\u201c\u7528\u6237\u7a97\u53e3\u63a7\u4ef6\u201d\uff0c\u547d\u540d\u4e3aTHMeter.cs\u3002"}),"\n",(0,r.jsx)(e.h3,{id:"\u6e29\u6e7f\u5ea6\u663e\u793a\u95ee\u9898",children:"\u6e29\u6e7f\u5ea6\u663e\u793a\u95ee\u9898"}),"\n",(0,r.jsx)(e.p,{children:"\u63a7\u4ef6\u754c\u9762\u5927\u5c0f\u5bbd\u5ea6\u8bbe\u7f6e\u621073px\uff0c\u9ad8\u5ea6\u8bbe\u7f6e\u4e3a203px\u3002\u5728\u63a7\u4ef6\u4e0a\u6dfb\u52a0Panel\u63a7\u4ef6\uff0c\u91cd\u547d\u540d\u4e3apanelBg,\u5bbd\u5ea6\u8bbe\u7f6e\u621073px\uff0c\u9ad8\u5ea6\u8bbe\u7f6e\u4e3a203px\u3002"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://blog-1301697820.cos.ap-guangzhou.myqcloud.com/blog/image-20250520170935788.png",alt:"image-20250520170935788"})}),"\n",(0,r.jsx)(e.p,{children:"panelBg\u8bbe\u7f6e\u80cc\u666f\u56fe\u50cf"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://blog-1301697820.cos.ap-guangzhou.myqcloud.com/blog/image-20250520171042137.png",alt:"image-20250520171042137"})}),"\n",(0,r.jsx)(e.p,{children:"\u6dfb\u52a0Label\u5230\u63a7\u4ef6\u4e2d\uff0c\u4fee\u6539Text\u5c5e\u6027\u4e3a\u201c\u201d\uff0c\u4fee\u6539AutoSize\u5c5e\u6027\u4e3aFlase,\u5c06BackColor\u8bbe\u7f6e\u6210\u767d\u8272\uff0c\u5c06Width\u5c5e\u6027\u4fee\u6539\u4e3a10\uff0cHeight\u5c5e\u6027\u8bbe\u7f6e\u4e3a135"}),"\n",(0,r.jsx)(e.p,{children:"\u8ba9Label\u5b8c\u7f8e\u8986\u76d6\u5230\u6e29\u5ea6\u8ba1\u7684\u4e2d\u5fc3\u3002"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.img,{src:"https://blog-1301697820.cos.ap-guangzhou.myqcloud.com/blog/image-20250520171823396.png",alt:"image-20250520171823396"}),"\u6dfb\u52a0\u6e29\u5ea6\u6761\u7684\u5b9e\u73b0\u5c5e\u6027\u3002"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c#",children:'using System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Drawing;\nusing System.Data;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing System.Windows.Forms;\n\nnamespace scada.MyControls\n{\n    public partial class THMeter : UserControl\n    {\n        public THMeter()\n        {\n            InitializeComponent();\n        }\n\n        // \u8bbe\u7f6e\u6e29\u6e7f\u5ea6\u67f1\u72b6\u663e\u793a\u548c\u5b9e\u9645\u6e29\u6e7f\u5ea6\u663e\u793a\u3010\u5c5e\u6027\u3011\n        private int barHeight = 135;\n\n        public double SetHTValue\n        {\n            get { return barHeight; }\n            set\n            {\n                if (value < 0 || value > 70)\n                {\n                    MessageBox.Show("\u6e29\u6e7f\u5ea6\u5fc5\u987b\u57280-70\u4e4b\u95f4\uff01");\n                }\n                else\n                {\n                    double realValue = (barHeight/70.0) *value; // \u5b9e\u9645\u503c\u5bf9\u5e94\u7684\u9ad8\u5ea6\n                    this.lblBar.Height =  barHeight - Convert.ToInt32(realValue);\n                }\n            }\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u63a5\u4e0b\u6765\u6d4b\u8bd5\u4e0b\uff0c\u9009\u4e2d\u89e3\u51b3\u65b9\u6848\uff0c\u6dfb\u52a0\u65b0\u9879\u76ee\uff0c\u9879\u76ee\u9009\u62e9Windows\u7a97\u4f53\u5e94\u7528scada.THProjectMain\uff0c\u521b\u5efa\u540e\u91cd\u547d\u540dFrom1\u7a97\u53e3\u4e3aFromMain\u7a97\u53e3"}),"\n",(0,r.jsx)(e.p,{children:"\u9009\u4e2dscada.MyControls\u9879\u76ee\uff0c\u53f3\u51fb\u9009\u62e9\u751f\u6210\u3002\u67e5\u770b\u5de5\u5177\u7bb1\u8fd9\u91cc\uff0c\u81ea\u5b9a\u4e49\u7684\u63a7\u4ef6THMeter\u5c31\u4f1a\u663e\u793a\u5728\u8fd9\u91cc,\u53ef\u4ee5\u76f4\u63a5\u62d6\u5230FromMain\u7a97\u53e3\u4e2d\u3002"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://blog-1301697820.cos.ap-guangzhou.myqcloud.com/blog/image-20250520173007821.png",alt:"image-20250520173007821"})}),"\n",(0,r.jsx)(e.p,{children:"\u4fee\u6539\u542f\u52a8\u9879\uff0c\u8fd0\u884c\u9879\u76ee\u3002"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://blog-1301697820.cos.ap-guangzhou.myqcloud.com/blog/image-20250520173559115.png",alt:"image-20250520173559115"})}),"\n",(0,r.jsx)(e.p,{children:"\u5c06\u7528\u6237\u63a7\u4ef6THMeter\u76f4\u63a5\u62d6\u5230FormMain\u4e2d\uff0c\u5728\u65b0\u5efa\u4e00\u4e2abutton\u63a7\u4ef6"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://blog-1301697820.cos.ap-guangzhou.myqcloud.com/blog/image-20250520203144928.png",alt:"image-20250520203144928"})}),"\n",(0,r.jsx)(e.p,{children:"\u53cc\u51fbbutton1\u63a7\u4ef6\uff0c\u6dfb\u52a0\u6309\u94ae\u70b9\u51fb\u4e8b\u4ef6\u3002\u5728\u7a97\u53e3\u521d\u59cb\u5316\u7a0b\u5e8f\u4e2d\u7ed9\u81ea\u5b9a\u4e49\u7684\u63a7\u4ef6\u8d4b\u503c\u3002"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c#",children:"namespace scada.THProjectMain\n{\n    public partial class FormMain : Form\n    {\n        public FormMain()\n        {\n            InitializeComponent();\n\n            this.thMeter1.SetHTValue = 20;\n        }\n\n        private void button1_Click(object sender, EventArgs e)\n        {\n            this.thMeter1.SetHTValue = 30;\n        }\n\n    }\n}\n\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u63a5\u7740\u8fd0\u884c\u4e3b\u7a97\u53e3\u3002"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://blog-1301697820.cos.ap-guangzhou.myqcloud.com/blog/form.gif",alt:"form"})}),"\n",(0,r.jsx)(e.h3,{id:"\u80cc\u666f\u989c\u8272\u7684\u6539\u53d8",children:"\u80cc\u666f\u989c\u8272\u7684\u6539\u53d8"}),"\n",(0,r.jsx)(e.p,{children:"\u9996\u5148\uff0c\u5c06\u56fe\u7247\u6dfb\u52a0\u6210\u8d44\u6e90\uff0c\u65b9\u4fbf\u540e\u9762\u901a\u8fc7\u4ee3\u7801\u5b9e\u73b0\u80cc\u666f\u7684\u5207\u6362\u3002"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://blog-1301697820.cos.ap-guangzhou.myqcloud.com/blog/image-20250520215728140.png",alt:"image-20250520215728140"})}),"\n",(0,r.jsx)(e.p,{children:"\u5728panelBg\u8fd9\u91cc\u8bbe\u7f6e\u80cc\u666f\u7684\u65f6\u5019\uff0c\u9009\u62e9\u9879\u76ee\u8d44\u6e90\u6587\u4ef6\uff0c\u70b9\u51fb\u5bfc\u5165\u5c06green_all\u548cred_all\u6587\u4ef6\u5bfc\u5165\uff0c\u9ed8\u8ba4\u9009\u4e2dgreen_all\u3002\u4fee\u6539THMeter.ms"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c#",children:'using System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Drawing;\nusing System.Data;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing System.Windows.Forms;\n\nnamespace scada.MyControls\n{\n    public partial class THMeter : UserControl\n    {\n        public THMeter()\n        {\n            InitializeComponent();\n        }\n\n        // \u8bbe\u7f6e\u6e29\u6e7f\u5ea6\u67f1\u72b6\u663e\u793a\u548c\u5b9e\u9645\u6e29\u6e7f\u5ea6\u663e\u793a\u3010\u5c5e\u6027\u3011  \n        private int barHeight = 135;\n        public double SetHTValue\n        {\n            get { return barHeight; }\n            set\n            {\n                // \u8bbe\u7f6e\u6e29\u6e7f\u5ea6\u503c  \n                if (0 <= value && value <= 70 )\n                {\n                    double realValue = (barHeight / 70.0) * value; // \u5b9e\u9645\u503c\u5bf9\u5e94\u7684\u9ad8\u5ea6  \n                    this.lblBar.Height = barHeight - Convert.ToInt32(realValue);\n                }\n                else\n                {\n                    if(value != null)\n                    {\n                        Console.WriteLine("");\n                    }\n                    else\n                    {\n                        MessageBox.Show("\u6e29\u6e7f\u5ea6\u5fc5\u987b\u57280-70\u4e4b\u95f4\uff01");\n                    }\n                    \n                }\n            }\n        }\n\n        // \u8bbe\u7f6e\u6e29\u6e7f\u5ea6\u8ba1\u7684\u80cc\u666f\u989c\u8272\u3010\u5c5e\u6027\u3011\n        private BgColor bgColor = BgColor.Green;\n\n        public BgColor SetBackgroundColor\n        {\n            get { return bgColor; }\n            set\n            {\n                // \u8bbe\u7f6e\u80cc\u666f\u989c\u8272  \n                bgColor = value;\n                if (bgColor == BgColor.Green)\n                {\n                    this.panelBg.BackgroundImage = Properties.Resources.green_all;\n                }\n                else if (bgColor == BgColor.Red) \n                {\n                    this.panelBg.BackgroundImage = Properties.Resources.red_all;\n                }\n            }\n        }\n        public enum BgColor\n        {\n            Green,\n            Red\n        }\n\n    }\n}\n\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u518d\u6d4b\u8bd5\u4e0b\uff0c\u5728FormMain\u4e2d\u6dfb\u52a0\u5982\u4e0b\u63a7\u4ef6\uff0c\u5e76\u5b9e\u73b0\u4e24\u4e2a\u6309\u94ae\u7684\u70b9\u51fb\u4e8b\u4ef6\u3002"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://blog-1301697820.cos.ap-guangzhou.myqcloud.com/blog/image-20250520221450728.png",alt:"image-20250520221450728"})}),"\n",(0,r.jsx)(e.p,{children:"FormMain.cs\u4e2d\u5b9e\u73b0\u6309\u94ae\u70b9\u51fb\u4e8b\u4ef6\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c#",children:"using static scada.MyControls.THMeter;\n\nnamespace scada.THProjectMain\n{\n    public partial class FormMain : Form\n    {\n        public FormMain()\n        {\n            InitializeComponent();\n\n            this.thMeter1.SetHTValue = 20;\n            this.thMeter2.SetHTValue = 20;\n        }\n\n        private void button1_Click(object sender, EventArgs e)\n        {\n            // \u70b9\u51fb\u6309\u94ae1\uff0c\u8bbe\u7f6e\u7b2c\u4e00\u4e2a\u6e29\u6e7f\u5ea6\u8ba1\u7684\u503c\u548c\u80cc\u666f\u989c\u8272\n            this.thMeter1.SetHTValue = 30;\n            this.thMeter1.SetBackgroundColor = BgColor.Green;\n        }\n\n        private void button2_Click(object sender, EventArgs e)\n        {\n            // \u70b9\u51fb\u6309\u94ae2\uff0c\u8bbe\u7f6e\u7b2c2\u4e2a\u6e29\u6e7f\u5ea6\u8ba1\u7684\u503c\u548c\u80cc\u666f\u989c\u8272\n            this.thMeter2.SetHTValue = 50;\n            this.thMeter2.SetBackgroundColor = BgColor.Red;\n        }\n    }\n}\n\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u8fd0\u884c\u540e\u70b9\u51fb\u6309\u94ae\uff0c\u5b9e\u73b0\u7684\u6548\u679c\u5982\u4e0b\uff1a"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://blog-1301697820.cos.ap-guangzhou.myqcloud.com/blog/thbg.gif",alt:"thbg"})}),"\n",(0,r.jsx)(e.h3,{id:"\u6e29\u6e7f\u5ea6\u503c\u7684\u663e\u793a",children:"\u6e29\u6e7f\u5ea6\u503c\u7684\u663e\u793a"}),"\n",(0,r.jsx)(e.p,{children:"\u63a5\u4e0b\u6765\u6211\u4eec\u5b9e\u73b0\u5de6\u8fb9\u7684\u63a7\u4ef6\u663e\u793a\u6e29\u5ea6\uff0c\u53f3\u8fb9\u7684\u63a7\u4ef6\u663e\u793a\u6e7f\u5ea6\uff0c\u5e76\u5728\u63a7\u4ef6\u4e0b\u65b9\u4f7f\u7528\u9759\u6001\u6587\u5b57\u6807\u8bc6\uff0c\u5728\u6587\u5b57\u7684\u4e0b\u65b9\u52a8\u6001\u663e\u793a\u6e29\u5ea6\u548c\u6e7f\u5ea6\u7684\u503c\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u9759\u6001\u6587\u5b57\u6807\u8bc6\u548c\u6e29\u5ea6\u548c\u6e7f\u5ea6\u7684\u503c\u90fd\u4f7f\u7528Label\u63a7\u4ef6\u5b9e\u73b0\u3002"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://blog-1301697820.cos.ap-guangzhou.myqcloud.com/blog/image-20250520225936817.png",alt:"image-20250520225936817"})}),"\n",(0,r.jsx)(e.h3,{id:"\u8fde\u63a5\u53c2\u6570\u754c\u9762",children:"\u8fde\u63a5\u53c2\u6570\u754c\u9762"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://blog-1301697820.cos.ap-guangzhou.myqcloud.com/blog/image-20250520231943384.png",alt:"image-20250520231943384"})}),"\n",(0,r.jsx)(e.p,{children:"\u6309\u7167\u4e0a\u56fe\u7ed8\u5236\u754c\u9762\uff0c\u6309\u7167\u7ea2\u8272\u6807\u6ce8\u8bbe\u7f6e\u63a7\u4ef6\u540d\u79f0\u3002\uff08\u8fd9\u91cc\u6e7f\u5ea6\u7684\u6587\u5b57\u5199\u9519\u4e86\uff0clal_H\u548clal_T\u7684\u547d\u540d\u6389\u6362\u4e00\u4e0b\uff09"}),"\n",(0,r.jsx)(e.h3,{id:"\u8bf7\u6c42\u548c\u5e94\u7b54\u62a5\u6587\u7684\u5c01\u88c5\u548c\u89e3\u6790",children:"\u8bf7\u6c42\u548c\u5e94\u7b54\u62a5\u6587\u7684\u5c01\u88c5\u548c\u89e3\u6790"}),"\n",(0,r.jsx)(e.h4,{id:"modbus\u62a5\u6587\u901a\u8baf\u89e3\u6790",children:"Modbus\u62a5\u6587\u901a\u8baf\u89e3\u6790"}),"\n",(0,r.jsx)(e.p,{children:"\u5728\u89e3\u51b3\u65b9\u6848\u4e2d\u521b\u5efa\u65b0\u9879\u76eescada.ModbusBase,\u9879\u76ee\u7c7b\u578b\u9009\u62e9\u63a7\u5236\u53f0\u7a0b\u5e8f\u3002\u5982\u679c\u662f.net8,\u9700\u8981\u624b\u52a8\u5b89\u88c5 System.IO.Ports\u5305\u3002"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-C#",children:'using System.IO;\nusing System.IO.Ports;\n\nnamespace scada.ModbusBase\n{\n    internal class Program\n    {\n       \n        static void Main(string[] args)\n        {\n            SerialPort serialPort = new SerialPort();\n            // \u8bbe\u7f6e\u4e32\u53e3\u53c2\u6570\n            serialPort.PortName = "COM12"; // \u4e32\u53e3\u53f7\n            serialPort.BaudRate = 9600; // \u6ce2\u7279\u7387\n            serialPort.Parity = Parity.None; // \u6821\u9a8c\u4f4d\n            serialPort.DataBits = 8; // \u6570\u636e\u4f4d\n            serialPort.StopBits = StopBits.One; // \u505c\u6b62\u4f4d\n            serialPort.Handshake = Handshake.None; // \u6d41\u63a7\u5236\n            serialPort.ReadTimeout = 500; // \u8bfb\u53d6\u8d85\u65f6\n            serialPort.WriteTimeout = 500; // \u5199\u5165\u8d85\u65f6\n\n            // \u6253\u5f00\u4e32\u53e3\n            try\n            {\n                serialPort.Open();\n                Console.WriteLine("\u4e32\u53e3\u5df2\u6253\u5f00");\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine($"\u6253\u5f00\u4e32\u53e3\u5931\u8d25: {ex.Message}");\n                return;\n            }\n\n            // \u5faa\u73af\u8bfb\u53d6\u6570\u636e\n            while (true)\n            {\n                Thread.Sleep(2000); // \u5ef6\u65f62\u79d2\n\n                // \u62fc\u63a5\u62a5\u6587\n                List<byte> sendBytes = new List<byte>();\n                sendBytes.Add(0x01); // \u4ece\u7ad9\u5730\u5740\n                sendBytes.Add(0x03); // \u529f\u80fd\u7801\n                sendBytes.Add(0x00); // \u8d77\u59cb\u5730\u5740\u9ad8\u5b57\u8282\n                sendBytes.Add(0x00); // \u8d77\u59cb\u5730\u5740\u4f4e\u5b57\u8282\n                sendBytes.Add(0x00); // \u5bc4\u5b58\u5668\u6570\u91cf\u9ad8\u5b57\u8282\n                sendBytes.Add(0x02); // \u5bc4\u5b58\u5668\u6570\u91cf\u4f4e\u5b57\u8282\n                                     // CRC\u6821\u9a8c\n                sendBytes.Add(0xC4); // CRC\u9ad8\u5b57\u8282\n                sendBytes.Add(0x0B); // CRC\u4f4e\u5b57\u8282\n\n                // \u53d1\u9001\u62a5\u6587\n                serialPort.Write(sendBytes.ToArray(), 0, sendBytes.Count);\n\n                // \u63a5\u6536\u5ef6\u65f6\n                Thread.Sleep(100);\n\n                // \u8bfb\u53d6serialPort\u6570\u636e   \n                try\n                {\n                    byte[] receiveBytes = new byte[serialPort.BytesToRead];\n                    // \u63a5\u53d7\u7f13\u51b2\u533a\u7684\u5168\u90e8\u5b57\u8282\n                    serialPort.Read(receiveBytes, 0, receiveBytes.Length);\n\n                    if (receiveBytes[0] == 0x01)    // \u5224\u65ad\u5730\u5740\n                    {\n                        // \u63a5\u6536\u62a5\u6587\uff1a 01  03  04  00  01  00  01  6A  33\n                        // \u8f6c\u621010\u8fdb\u5236\uff1a 1   3   4   0   1   0   1   106 51\n                        // \u6570\u636e\u7d22\u5f15\uff1a[0] [1] [2]  [3] [4] [5] [6] [7] [8]\n                        // \u6570\u7ec4\u5b57\u8282\u523010\u8fdb\u5236\u9ad8\u4f4e\u5b57\u8f6c\u6362\n                        // \u7b2c\u4e00\u4e2a\u5bc4\u5b58\u5668\u6e29\u5ea6\uff0c\u9ad8\u5b57\u8282\u5728\u524d\uff0c\u4f4e\u5b57\u8282\u5728\u540e\n                        int highByte_temperature = receiveBytes[3]; // \u9ad8\u5b57\u8282\n                        int lowByte_temperature = receiveBytes[4]; // \u4f4e\u5b57\u8282\n                        int value_temperature = (highByte_temperature << 8) + lowByte_temperature; // \u5408\u5e76\u9ad8\u4f4e\u5b57\u8282\n\n                        int highByte_humidity = receiveBytes[5]; // \u9ad8\u5b57\u8282\n                        int lowBytee_humidity = receiveBytes[6]; // \u4f4e\u5b57\u8282\n                        int value_humidity = (highByte_humidity << 8) + lowBytee_humidity; // \u5408\u5e76\u9ad8\u4f4e\u5b57\u8282\n\n                        string humidity = (value_humidity * 0.1).ToString("0.0");\n                        string temperature = (value_temperature * 0.1).ToString("0.0");\n\n                        Console.WriteLine($"\u6e7f\u5ea6:{humidity}% \u6e29\u5ea6:{temperature}\u2103");\n\n                    }\n                }\n                catch (TimeoutException)\n                {\n                    Console.WriteLine("\u8bfb\u53d6\u8d85\u65f6");\n                }\n                catch (Exception ex)\n                {\n                    Console.WriteLine($"\u8bfb\u53d6\u6570\u636e\u5931\u8d25: {ex.Message}");\n                }\n            }\n        }\n    }\n}\n\n'})}),"\n",(0,r.jsxs)(e.p,{children:["\u4f7f\u7528Modbus slave \u5de5\u5177\u6a21\u62df\u4e00\u4e2aModbus\u670d\u52a1\u7aef\uff0c\u8fd0\u884c\u63a7\u5236\u53f0\u7a0b\u5e8f\uff0c\u8fd9\u91cc\u521b\u5efa\u4e86\u865a\u62df\u4e32\u53e3",(0,r.jsx)(e.code,{children:"COM11<--\x3eCOM12"}),"\uff0c\u521b\u5efa\u65b9\u5f0f\u4e0d\u8fc7\u591a\u8d58\u8ff0\u3002"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://blog-1301697820.cos.ap-guangzhou.myqcloud.com/blog/image-20250521131401556.png",alt:"image-20250521131401556"})}),"\n",(0,r.jsx)(e.h4,{id:"modbus-rtu\u901a\u8baf\u7c7b",children:"Modbus RTU\u901a\u8baf\u7c7b"}),"\n",(0,r.jsx)(e.p,{children:"\u5728\u89e3\u51b3\u65b9\u6848\u4e2d\u521b\u5efa\u65b0\u9879\u76eescada.ModbusRTUlib,\u9879\u76ee\u7c7b\u578b\u9009\u62e9\u7c7b\u5e93\u3002\u5728\u9879\u76ee\u4e0b\u6dfb\u52a0ModbusRTU.cs\u3002"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c#",children:'using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n// \u5f15\u5165\u547d\u540d\u7a7a\u95f4\nusing System.Threading;\nusing System.IO.Ports;\nusing System.Runtime.InteropServices;\n\nnamespace scada.ModbusRTUlib\n{\n    /// <summary>\n    /// Modbus RTU\u534f\u8bae\u5b9e\u73b0\n    /// </summary>\n    public class ModbusRTU\n    {\n\n\n        // \u5b57\u6bb5\n        private SerialPort serialPort = null; // \u4e32\u53e3\u5bf9\u8c61\n\n        // \u6784\u9020\u65b9\u6cd5\n        public ModbusRTU()\n        {\n\n        }\n\n        /// <summary>\n        /// \u6709\u53c2\u6784\u9020\u65b9\u6cd5\n        /// </summary>\n        /// <param name="delay">\u63a5\u6536\u5ef6\u65f6</param>\n        public ModbusRTU(int delay)\n        {\n            this.ReceiveDelay = delay; // \u63a5\u6536\u5ef6\u65f6\n        }\n\n        // \u5c5e\u6027\n        private int _receivedelay = 100; // \u63a5\u6536\u5ef6\u65f6\n        public int ReceiveDelay\n        {\n            get { return _receivedelay; }\n            set\n            {\n                if (value < 0 || value > 2000) // \n                {\n                    _receivedelay = 100;\n                }\n                else\n                {\n                    _receivedelay = value;\n                }\n            }\n        }\n\n        // \u65b9\u6cd5\uff08\u6253\u5f00\u4e32\u53e3\u3001\u5173\u95ed\u4e32\u53e3\u3001\u8bfb\u4fdd\u6301\u5bc4\u5b58\u566803H, CRC\u6821\u9a8c\uff09\n        /// <summary>\n        /// \u6253\u5f00\u4e32\u53e3\n        /// </summary>\n        /// <param name="portName">\u4e32\u53e3\u53f7</param>\n        /// <param name="baudRate">\u6ce2\u7279\u7387</param>\n        /// <param name="parity">\u6821\u9a8c\u4f4d</param>\n        /// <param name="dataBits">\u6570\u636e\u4f4d</param>\n        /// <param name="stopBits">\u505c\u6b62\u4f4d</param>\n        public void OpenPort(string portName, int baudRate = 9600,\n            Parity parity = Parity.None, int dataBits = 8,\n            StopBits stopBits = StopBits.One)\n        {\n            // \u521b\u5efa\u4e32\u53e3\u5bf9\u8c61\n            serialPort = new SerialPort(portName, baudRate, parity, dataBits, stopBits);\n\n            // \u6253\u5f00\u4e32\u53e3\n            try\n            {\n                serialPort.Open();\n            }\n            catch (Exception ex)\n            {\n                throw new Exception($"\u6253\u5f00\u4e32\u53e3\u5931\u8d25: {ex.Message}");\n            }\n        }\n\n\n        /// <summary>\n        /// \u5173\u95ed\u4e32\u53e3\n        /// </summary>\n        public void ClosePort()\n        {\n\n            if (serialPort != null && serialPort.IsOpen)\n            {\n                serialPort.Close();\n            }\n        }\n\n        /// <summary>\n        /// \u8bfb\u53d6\u4fdd\u6301\u5bc4\u5b58\u566803H\n        /// </summary>\n        /// <param name="slaveAddress">\u4ece\u7ad9\u5730\u5740</param>\n        /// <param name="startAddress">\u8d77\u59cb\u5bc4\u5b58\u5668\u5730\u5740</param>\n        /// <param name="registerCount">\u5bc4\u5b58\u5668\u4e2a\u6570</param>\n        /// <returns></returns>\n        /// <exception cref="Exception"></exception>\n        public byte[] ReadHoldingRegisters(byte slaveAddress, ushort startAddress, ushort registerCount)\n        {\n            // \u7b2c\u4e00\u6b65\uff1a\u5c01\u88c5\u8bf7\u6c42\u62a5\u6587\n            List<byte> sendBytes = new List<byte>();\n            sendBytes.Add(slaveAddress); // \u4ece\u7ad9\u5730\u5740\n            sendBytes.Add(0x03); // \u529f\u80fd\u7801\n            sendBytes.Add((byte)(startAddress >> 8)); // \u8d77\u59cb\u5730\u5740\u9ad8\u5b57\u8282\n            sendBytes.Add((byte)(startAddress & 0xFF)); // \u8d77\u59cb\u5730\u5740\u4f4e\u5b57\u8282\n            sendBytes.Add((byte)(registerCount >> 8)); // \u5bc4\u5b58\u5668\u6570\u91cf\u9ad8\u5b57\u8282\n            sendBytes.Add((byte)(registerCount & 0xFF)); // \u5bc4\u5b58\u5668\u6570\u91cf\u4f4e\u5b57\u8282\n                                                         // CRC\u6821\u9a8c\n            byte[] crc = CRC16(sendBytes.ToArray(), 6);//\u5c01\u88c5CRC\u6821\u9a8c\u6821\u9a8c\u524d\u97626\u4f4d\n            sendBytes.Add((crc[0])); // CRC\u4f4e\u5b57\u8282\n            sendBytes.Add((crc[1])); // CRC\u9ad8\u5b57\u8282\n\n            // \u7b2c\u4e8c\u6b65\uff1a\u53d1\u9001\u8bf7\u6c42\u62a5\u6587\n            byte[] receiveBytes = null; // \u5b9a\u4e49\u63a5\u6536\u5b57\u8282\u6570\u7ec4\n            try\n            {\n                if (serialPort == null || !serialPort.IsOpen)\n                {\n                    throw new Exception("\u4e32\u53e3\u672a\u6253\u5f00");\n                }\n                serialPort.Write(sendBytes.ToArray(), 0, sendBytes.Count);\n                // \u63a5\u6536\u5ef6\u65f6\n                Thread.Sleep(ReceiveDelay);\n\n                // \u7b2c\u4e09\u6b65\uff1a\u63a5\u6536\u54cd\u5e94\u62a5\u6587\n                // \u8bfb\u53d6serialPort\u6570\u636e   \n                try\n                {\n                    receiveBytes = new byte[serialPort.BytesToRead];\n                    serialPort.Read(receiveBytes, 0, receiveBytes.Length);\n                    \n                }\n                catch (Exception ex)\n                {\n                    throw new Exception($"\u8bfb\u53d6\u6570\u636e\u5931\u8d25: {ex.Message}");\n                }\n            }\n            catch (Exception ex)\n            {\n\n                throw new Exception($"\u53d1\u9001\u6570\u636e\u5931\u8d25: {ex.Message}"); ;\n            }\n\n            // \u7b2c\u56db\u6b65\uff1a\u89e3\u6790\u54cd\u5e94\u62a5\u6587\n            if (receiveBytes.Length == 5 + 2 * registerCount)\n            {\n                //\u8fdb\u4e00\u6b65\u6821\u9a8c\n                if  ( receiveBytes[1] == 0x03\n                    && receiveBytes[2] == registerCount*2)\n                {\n                    byte[] returnDataArray = new byte[registerCount*2];//\u7528\u4e8e\u8fd4\u56de\u7684\u6570\u636e\u6570\u7ec4\n\n                    //\u8fd4\u56de\u622a\u53d6\u540e\u53ea\u5305\u62ec\u6570\u636e\u7684\u6570\u7ec4\uff08\u4ece\u7d22\u5f153\u5f00\u59cb\uff08\u53bb\u6389\u5730\u5740\u3001\u529f\u80fd\u7801\u3001\u5b57\u8282\u8ba1\u6570\uff09\uff0c\n                    //\u76ee\u7684\u6570\u7ec4\uff0c\u4ece0\u5f00\u59cb\uff0c\u590d\u5236\u6570\u636e\u957f\u5ea6\uff09\n                    Array.Copy(receiveBytes, 3, returnDataArray, 0, registerCount*2);\n                    return returnDataArray;//\u8fd4\u56de\u7684\u6570\u7ec4\uff0c\u53ea\u5305\u62ec\u6570\u636e\n                }\n                else return null;\n            }\n            else return null;\n        }\n\n        #region  CRC\u6821\u9a8c\u3010\u67e5\u8868\u6cd5\uff0c\u901f\u5ea6\u5f88\u5feb\u3011\n\n        private static readonly byte[] aucCRCHi = {\n             0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,\n             0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,\n             0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,\n             0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,\n             0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,\n             0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,\n             0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,\n             0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,\n             0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,\n             0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,\n             0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,\n             0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,\n             0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,\n             0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,\n             0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,\n             0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,\n             0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,\n             0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,\n             0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,\n             0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,\n             0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,\n             0x00, 0xC1, 0x81, 0x40\n         };\n        private static readonly byte[] aucCRCLo = {\n             0x00, 0xC0, 0xC1, 0x01, 0xC3, 0x03, 0x02, 0xC2, 0xC6, 0x06, 0x07, 0xC7,\n             0x05, 0xC5, 0xC4, 0x04, 0xCC, 0x0C, 0x0D, 0xCD, 0x0F, 0xCF, 0xCE, 0x0E,\n             0x0A, 0xCA, 0xCB, 0x0B, 0xC9, 0x09, 0x08, 0xC8, 0xD8, 0x18, 0x19, 0xD9,\n             0x1B, 0xDB, 0xDA, 0x1A, 0x1E, 0xDE, 0xDF, 0x1F, 0xDD, 0x1D, 0x1C, 0xDC,\n             0x14, 0xD4, 0xD5, 0x15, 0xD7, 0x17, 0x16, 0xD6, 0xD2, 0x12, 0x13, 0xD3,\n             0x11, 0xD1, 0xD0, 0x10, 0xF0, 0x30, 0x31, 0xF1, 0x33, 0xF3, 0xF2, 0x32,\n             0x36, 0xF6, 0xF7, 0x37, 0xF5, 0x35, 0x34, 0xF4, 0x3C, 0xFC, 0xFD, 0x3D,\n             0xFF, 0x3F, 0x3E, 0xFE, 0xFA, 0x3A, 0x3B, 0xFB, 0x39, 0xF9, 0xF8, 0x38,\n             0x28, 0xE8, 0xE9, 0x29, 0xEB, 0x2B, 0x2A, 0xEA, 0xEE, 0x2E, 0x2F, 0xEF,\n             0x2D, 0xED, 0xEC, 0x2C, 0xE4, 0x24, 0x25, 0xE5, 0x27, 0xE7, 0xE6, 0x26,\n             0x22, 0xE2, 0xE3, 0x23, 0xE1, 0x21, 0x20, 0xE0, 0xA0, 0x60, 0x61, 0xA1,\n             0x63, 0xA3, 0xA2, 0x62, 0x66, 0xA6, 0xA7, 0x67, 0xA5, 0x65, 0x64, 0xA4,\n             0x6C, 0xAC, 0xAD, 0x6D, 0xAF, 0x6F, 0x6E, 0xAE, 0xAA, 0x6A, 0x6B, 0xAB,\n             0x69, 0xA9, 0xA8, 0x68, 0x78, 0xB8, 0xB9, 0x79, 0xBB, 0x7B, 0x7A, 0xBA,\n             0xBE, 0x7E, 0x7F, 0xBF, 0x7D, 0xBD, 0xBC, 0x7C, 0xB4, 0x74, 0x75, 0xB5,\n             0x77, 0xB7, 0xB6, 0x76, 0x72, 0xB2, 0xB3, 0x73, 0xB1, 0x71, 0x70, 0xB0,\n             0x50, 0x90, 0x91, 0x51, 0x93, 0x53, 0x52, 0x92, 0x96, 0x56, 0x57, 0x97,\n             0x55, 0x95, 0x94, 0x54, 0x9C, 0x5C, 0x5D, 0x9D, 0x5F, 0x9F, 0x9E, 0x5E,\n             0x5A, 0x9A, 0x9B, 0x5B, 0x99, 0x59, 0x58, 0x98, 0x88, 0x48, 0x49, 0x89,\n             0x4B, 0x8B, 0x8A, 0x4A, 0x4E, 0x8E, 0x8F, 0x4F, 0x8D, 0x4D, 0x4C, 0x8C,\n             0x44, 0x84, 0x85, 0x45, 0x87, 0x47, 0x46, 0x86, 0x82, 0x42, 0x43, 0x83,\n             0x41, 0x81, 0x80, 0x40\n         };\n        private byte[] CRC16(byte[] pucFrame, int usLen)\n        {\n            int i = 0;\n            byte[] res = new byte[2] { 0xFF, 0xFF };\n            ushort iIndex;\n            while (usLen-- > 0)\n            {\n                iIndex = (ushort)(res[0] ^ pucFrame[i++]);\n                res[0] = (byte)(res[1] ^ aucCRCHi[iIndex]);\n                res[1] = aucCRCLo[iIndex];\n            }\n            return res;\n        }\n\n        private bool CheckCRC(byte[] value)\n        {\n            if (value == null) return false;\n\n            if (value.Length <= 2) return false;\n\n            int length = value.Length;\n            byte[] buf = new byte[length - 2];\n            Array.Copy(value, 0, buf, 0, buf.Length);\n\n            byte[] CRCbuf = CRC16(buf, buf.Length);\n            if (CRCbuf[0] == value[length - 2] && CRCbuf[1] == value[length - 1])\n            {\n                return true;\n            }\n            return false;\n        }\n\n\n        #endregion\n\n    }\n}\n\n'})}),"\n",(0,r.jsx)(e.h3,{id:"\u9879\u76ee\u4e2d\u4f7f\u7528\u901a\u8baf\u7c7b",children:"\u9879\u76ee\u4e2d\u4f7f\u7528\u901a\u8baf\u7c7b"}),"\n",(0,r.jsx)(e.p,{children:"\u5c06ModbusRTUlib\u9879\u76ee\u5f15\u7528\u5230THProjectMain\u9879\u76ee\u4e2d\u3002"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://blog-1301697820.cos.ap-guangzhou.myqcloud.com/blog/image-20250521145549480.png",alt:"image-20250521145549480"})}),"\n",(0,r.jsx)(e.p,{children:"\u4fee\u6539FromMain.cs\u5b9e\u73b0\u540e\u7aef\u903b\u8f91\u3002"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c#",children:'using static scada.MyControls.THMeter;\nusing System.IO.Ports;\nusing scada.ModbusRTUlib;\nusing scada.MyControls;\n\nnamespace scada.THProjectMain\n{\n    public partial class FormMain : Form\n    {\n        // \u521b\u5efa\u901a\u4fe1\u7c7b\u5bf9\u8c61\n        ModbusRTU modbusRTU = new ModbusRTU();\n        public FormMain()\n        {\n            InitializeComponent();\n            Init();\n        }\n\n        /// <summary>\n        /// \u521d\u59cb\u5316\u4e0a\u4e0b\u6587\n        /// </summary>\n        private void Init()\n        {\n            // \u7ed1\u5b9a\u6ce2\u7279\u7387\u7684\u4e0b\u62c9\u6846\n            string[] baudRates = { "2400", "4800", "9600", "115200", "19200", "38400" };\n            this.cmb_BaudRate.Items.AddRange(baudRates);\n            this.cmb_BaudRate.SelectedIndex = 2;\n\n            // \u5f53\u524d\u53ef\u7528\u7684\u4e32\u53e3\n            this.cmb_PortName.DataSource = SerialPort.GetPortNames();\n\n            // \u5b9a\u65f6\u5668\u8bbe\u7f6e\n            this.timer1.Interval = 1000; // 1\u79d2\n\n        }\n\n        private bool _isConnected = false;\n        public bool IsConnected\n        {\n            get { return _isConnected; }\n            set\n            {\n                _isConnected = value; // \u4fdd\u5b58\u5f53\u524d\u72b6\u6001\n                this.btn_OpenAndClose.Text = _isConnected ? "\u65ad\u5f00\u8fde\u63a5" : "\u6253\u5f00\u8fde\u63a5";\n                if (value)\n                {\n                    // \u5982\u679c\u8fde\u63a5\u6210\u529f\uff0c\u8bbe\u7f6e\u6309\u94ae\u989c\u8272\n                    this.btn_OpenAndClose.BackColor = Color.Red;\n                    this.btn_OpenAndClose.ForeColor = Color.White;\n                    this.lbl_Status.ForeColor = Color.Green;\n                }\n                else\n                {\n                    this.btn_OpenAndClose.BackColor = Color.Green;\n                    this.btn_OpenAndClose.ForeColor = Color.White;\n                    this.lbl_Status.ForeColor = Color.Red;\n                }\n            }\n        }\n        // \u6253\u5f00\u548c\u5173\u95ed\u4e32\u53e3\n        private void btn_OpenAndClose_Click(object sender, EventArgs e)\n        {\n            if (!IsConnected)\n            {\n                try\n                {\n                    modbusRTU.OpenPort(this.cmb_PortName.Text,\n                        Convert.ToInt32(this.cmb_BaudRate.Text));\n                    IsConnected = true;\n                    this.timer1.Start(); // \u542f\u52a8\u5b9a\u65f6\u5668\n                }\n                catch (Exception ex)\n                {\n                    MessageBox.Show("\u6253\u5f00\u4e32\u53e3\u5931\u8d25\uff01" + ex.Message);\n                    return;\n                }\n            }\n            else\n            {\n                try\n                {\n                    this.timer1.Stop(); // \u5148\u505c\u6b62\u5b9a\u65f6\u5668\n                    modbusRTU.ClosePort();\n                    IsConnected = false;\n                }\n                catch (Exception ex)\n                {\n                    MessageBox.Show("\u5173\u95ed\u4e32\u53e3\u5931\u8d25\uff01" + ex.Message);\n                    return;\n                }\n            }\n        }\n\n\n        #region \u5b9a\u65f6\u5faa\u73af\u8bfb\u53d6\u5bc4\u5b58\u5668\u6570\u636e\n        private void timer1_Tick(object sender, EventArgs e)\n        {\n            // \u8bfb\u53d6\u6570\u636e\uff082\u4e2a\u5bc4\u5b58\u5668\uff0c\u8d77\u59cb\u5730\u5740\uff1a0000H\uff09\n            byte[] data = modbusRTU.ReadHoldingRegisters(Convert.ToByte(this.cmb_Slaved.Text), 0, 2);\n\n            if (data != null)\n            {\n                // \u89e3\u6790\u6570\u636e\n                int temperature = (data[0] << 8) + data[1]; // \u6e29\u5ea6\n                int humidity = (data[2] << 8) + data[3]; // \u6e7f\u5ea6\n                                                         // \u663e\u793a\u6570\u636e\n\n\n                // \u8bbe\u7f6e\u6e29\u6e7f\u5ea6\u8ba1\u7684\u663e\u793a\u503c\n                if (temperature >= 0 && temperature <= 70)\n                {\n                    this.thMeter1.SetHTValue = temperature;\n                    this.lal_T.Text = temperature.ToString("0.0");\n                    if (temperature >= 45 && temperature < 70)\n                    {\n                        if (this.thMeter1.SetBackgroundColor == THMeter.BgColor.Green)\n                        {\n                            this.thMeter1.SetBackgroundColor = THMeter.BgColor.Red;\n                        }\n                    }\n                    else\n                    {\n                        if (this.thMeter1.SetBackgroundColor == THMeter.BgColor.Red)\n                        {\n                            this.thMeter1.SetBackgroundColor = THMeter.BgColor.Green;\n                        }\n                    }\n                    \n                    \n                }\n                else\n                {\n                    this.thMeter1.SetHTValue = 0;\n                    this.lal_T.Text = "err";\n                    if (this.thMeter1.SetBackgroundColor == THMeter.BgColor.Red)\n                    {\n                        this.thMeter1.SetBackgroundColor = THMeter.BgColor.Green;\n                    }\n                }\n\n                if (humidity >= 0 && humidity <= 700)\n                {\n                    this.thMeter2.SetHTValue = humidity*0.1;\n                    this.lal_H.Text = (humidity * 0.1).ToString("0.0");\n\n                    if(humidity >= 450 && humidity <= 700)\n                    {\n                        if (this.thMeter2.SetBackgroundColor == THMeter.BgColor.Green)\n                        {\n                            this.thMeter2.SetBackgroundColor = THMeter.BgColor.Red;\n                        }\n                    }\n                    else\n                    {\n                        if (this.thMeter2.SetBackgroundColor == THMeter.BgColor.Red)\n                        {\n                            this.thMeter2.SetBackgroundColor = THMeter.BgColor.Green;\n                        }\n                    }\n                }\n                else\n                {\n                    this.thMeter2.SetHTValue = 0;\n                    this.lal_H.Text = "err";\n                    if (this.thMeter2.SetBackgroundColor == THMeter.BgColor.Red)\n                    {\n                        this.thMeter2.SetBackgroundColor = THMeter.BgColor.Green;\n                    }\n                }\n\n            }\n            #endregion\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(e.h3,{id:"\u6700\u7ec8\u5b9e\u73b0\u7684\u6548\u679c",children:"\u6700\u7ec8\u5b9e\u73b0\u7684\u6548\u679c"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://blog-1301697820.cos.ap-guangzhou.myqcloud.com/blog/mth.gif",alt:"mth"})})]})}function c(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}}}]);